name: Publish

on:
  release:
    types: [published]

jobs:
  push_to_github:
    name: Push Docker image to Github Packages
    runs-on: ubuntu-latest
    strategy:
      matrix:
        worker_name: [accounts, core, store, subscription, notification]

    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Log in to GitHub Docker Registry
        uses: docker/login-action@v1
        with:
          registry: docker.pkg.github.com
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get release version
        id: release
        run: |
          version=$(echo ${{github.event.release.tag_name}} | sed 's/${{matrix.worker_name}}\///g')
          echo "::set-output name=version::$version"

      - name: Build container image
        uses: docker/build-push-action@v2
        if: ${{ startsWith(github.event.release.tag_name, matrix.worker_name) }}
        with:
          push: true
          context: services/${{ matrix.worker_name }}
          tags: |
            docker.pkg.github.com/${{ github.repository }}/${{ matrix.worker_name }}:${{ steps.release.outputs.version }}
            docker.pkg.github.com/${{ github.repository }}/${{ matrix.worker_name }}:latest

      - name: Get argocd app name
        id: argocd
        run: |
          items=(store subscription)
          app_name=$([[ " ${items[*]} " =~ " ${{matrix.worker_name}} " ]] && echo "${{matrix.worker_name}}-worker" || echo "${{matrix.worker_name}}")
          echo "::set-output name=app_name::$app_name"

      - name: Update ArgoCD
        if: ${{ startsWith(github.event.release.tag_name, matrix.worker_name) }}
        continue-on-error: true
        run: |
          curl -sSL -o /usr/local/bin/argocd https://github.com/argoproj/argo-cd/releases/download/${{env.ARGOCD_VERSION}}/argocd-linux-amd64
          chmod +x /usr/local/bin/argocd
          argocd app set ${{env.SERVICE_NAME}} -p image.repository=ghcr.io/socketkit/socketkit/${{matrix.worker_name}} -p image.tag=${{steps.release.outputs.version}} --server ${{env.ARGOCD_BASE_URL}} --auth-token ${{env.ARGOCD_TOKEN}} --grpc-web
        env:
          ARGOCD_VERSION: v2.0.1
          ARGOCD_BASE_URL: cd.socketkit.com
          ARGOCD_TOKEN: ${{ secrets.ARGOCD_TOKEN }}
          SERVICE_NAME: ${{ steps.argocd.outputs.app_name }}

