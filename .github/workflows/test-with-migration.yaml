name: Test
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16]
        worker_name: [store]

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_DB: postgres
          POSTGRES_PASSWORD: postgres-password
          POSTGRES_PORT: 5432
          POSTGRES_USER: postgres
          POSTGRES_HOST: localhost
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Filter service name
      uses: dorny/paths-filter@v2
      id: changes
      with:
        filters: |
          src:
            - 'services/${{matrix.worker_name}}/**'

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      if: steps.changes.outputs.src == 'true'
      with:
        node-version: ${{ matrix.node-version }}

    - name: Cache .pnpm-store
      uses: actions/cache@v1
      if: steps.changes.outputs.src == 'true'
      with:
        path: ~/.pnpm-store
        key: ${{ runner.os }}-node${{ matrix.node-version }}-${{ hashFiles('**/pnpm-lock.yaml') }}

    - name: Install pnpm
      run: curl -f https://get.pnpm.io/v6.16.js | node - add --global pnpm@6
      if: steps.changes.outputs.src == 'true'

    - name: pnpm Build
      run: pnpm install
      if: steps.changes.outputs.src == 'true'

    - name: Run psql commands
      run: npm run migrate
      working-directory: services/${{matrix.worker_name}}
      if: steps.changes.outputs.src == 'true'
      env:
        PGPASSWORD: postgres-password

    - name: Run tests
      run: npm run test:ci
      working-directory: services/${{matrix.worker_name}}
      if: steps.changes.outputs.src == 'true'
      env:
        PGUSER: store-worker
        PGPASSWORD: change-this

    - uses: codecov/codecov-action@v2
      with:
        flags: store
        name: store
        fail_ci_if_error: true
        verbose: true
        root_dir: services/${{matrix.worker_name}}
