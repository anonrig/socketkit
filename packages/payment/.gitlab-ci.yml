image: docker:stable

services:
  - docker:stable-dind

stages:
  - build
  - deploy

variables:
  CONTAINER_BUILD_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
  CONTAINER_RELEASE_IMAGE: $CI_REGISTRY_IMAGE:latest
  ARGOCD_VERSION: 'v2.0.1'
  ARGOCD_PROJECT_NAME: 'payments'
  ARGOCD_BASE_URL: 'cd.socketkit.com'

before_script:
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY

Build:
  stage: build
  script:
    - docker pull $CONTAINER_RELEASE_IMAGE || true
    - >
      docker build
      --pull
      --build-arg VCS_REF=$CI_COMMIT_SHA
      --build-arg VCS_URL=$CI_PROJECT_URL
      --cache-from $CONTAINER_RELEASE_IMAGE
      --tag $CONTAINER_BUILD_IMAGE
      .
    - docker push $CONTAINER_BUILD_IMAGE

Update latest tag:
  stage: deploy
  only:
    - master
  script:
    - docker pull $CONTAINER_BUILD_IMAGE
    - docker tag $CONTAINER_BUILD_IMAGE $CONTAINER_RELEASE_IMAGE
    - docker push $CONTAINER_RELEASE_IMAGE

Set ArgoCD:
  stage: deploy
  only:
    - master
  script:
    - apk add --update curl && rm -rf /var/cache/apk/*
    - curl -sSL -o /usr/local/bin/argocd https://github.com/argoproj/argo-cd/releases/download/$ARGOCD_VERSION/argocd-linux-amd64
    - argocd app set $ARGOCD_PROJECT_NAME -p image.tag=$CI_COMMIT_SHA --server $ARGOCD_BASE_URL --auth-token $ARGOCD_TOKEN --grpc-web

Push tag:
  stage: deploy
  only:
    - tags
  script:
    - docker pull $CONTAINER_BUILD_IMAGE
    - docker tag $CONTAINER_BUILD_IMAGE $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME
